<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:cluster="http://www.mulesoft.org/schema/mule/ee/cluster" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">
    <configuration defaultExceptionStrategy-ref="Default_Choice_Exception_Strategy" doc:name="Configuration">
        <http:config useTransportForUris="false"/>
    </configuration>
	<choice-exception-strategy name="Default_Choice_Exception_Strategy">
		<catch-exception-strategy
			when="#[exception.causeMatches('com.mulesoft.weave.*')]" doc:name="DW exception">
			<set-payload value="NO FLIGHTS to #[flowVars.code +  '\n' + exception]"
				doc:name="Set Payload" />
			<set-property propertyName="http.status" value="400"
				doc:name="Property" />
			<logger level="INFO" doc:name="Logger" />
		</catch-exception-strategy>
		<catch-exception-strategy
			when="#[exception.causeMatches('java.lang.OutOfMemoryError')]"
			doc:name="Catch java.lang.OutOfMemoryError Exception Strategy">
            <set-payload value="#['Out of memory error occured' + exception]" doc:name="Set Payload"/>
			<set-property propertyName="http.status" value="500"
				doc:name="Property" />
		</catch-exception-strategy>
		<catch-exception-strategy when="#[exception.causeMatches('java.io.*')]"
			doc:name="Catch java.io Exception Strategy">
            <set-payload value="#['java.io exception occured: '+exception]" doc:name="Set Payload"/>
			<set-property propertyName="http.status" value="500"
				doc:name="Property" />
		</catch-exception-strategy>
		<catch-exception-strategy
			when="#[exception.causeMatches('InterruptedException')]" doc:name="Catch java.lang.InterruptedException Exception Strategy">
            <set-payload value="#['Java thread InterruptedException occured: ' + exception]" doc:name="Set Payload"/>
			<set-property propertyName="http.status" value="500"
				doc:name="Property" />
		</catch-exception-strategy>
		<catch-exception-strategy
			doc:name="Data unavailable &#8211; all other exceptions">
			<set-payload
				value="Default Exception : DATA IS UNAVAILABLE. TRY LATER. #['\n' + exception] "
				doc:name="Set Payload" />
			<set-property propertyName="http.status" value="500"
				doc:name="Property" />
			<logger level="INFO" doc:name="Logger" />
		</catch-exception-strategy>
	</choice-exception-strategy>
</mule>
